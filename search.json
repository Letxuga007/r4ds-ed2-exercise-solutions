[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Data Science (2nd edition) Unofficial Exercise Solutions",
    "section": "",
    "text": "1 About this book\nThis unofficial book is inspired by the R for Data Science Exercise Solutions and is an updated version in line with the second edition release of R for Data Science also referred to in the short form as R4DS.\nLike the two books mentioned, this is divided into the same sections with the same numbering for exercises. Sections without exercises will appear but with the callout block:\nTo attempt to make this book closely referenced to the original there will be hyperlinks for the chapter numbers and these may break if the book changes. There are no links or corresponding scripts to the the part sections of the R4DS book."
  },
  {
    "objectID": "index.html#githubquarto-scripts",
    "href": "index.html#githubquarto-scripts",
    "title": "R for Data Science (2nd edition) Unofficial Exercise Solutions",
    "section": "1.1 GitHub/Quarto scripts",
    "text": "1.1 GitHub/Quarto scripts\nThe book is built using the code names that follow the R4DS names which are listed in the corresponding _quarto.yml.\nThis book follows the NHS-R Way code book style with each sentence having a new line following The Turing Way."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "Note\n\n\n\nThere are no exercises in this section."
  },
  {
    "objectID": "data-visualize.html#section",
    "href": "data-visualize.html#section",
    "title": "3  Data visualization",
    "section": "2.2.5",
    "text": "2.2.5\n\n\nHow many rows are in penguins?\nHow many columns?\n\n\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nIt’s possible to see the number of rows and columns by typing:\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\nbut to get a code output:\n\nnrow(penguins)\n\n[1] 344\n\nncol(penguins)\n\n[1] 8\n\n\nand to find the dimensions of an object (the columns and rows):\n\ndim(penguins)\n\n[1] 344   8\n\n\n\n\nWhat does the bill_depth_mm variable in the penguins data frame describe? Read the help for ?penguins to find out.\n\n\nThere is a nice description and picture on Allison Horst’s GitHub.\n\n\nMake a scatterplot of bill_depth_mm vs. bill_length_mm. That is, make a scatterplot with bill_depth_mm on the y-axis and bill_length_mm on the x-axis. Describe the relationship between these two variables.\n\n\nBecause this pipes the data into the chart the parameter data = penguins is redundant. It is commented out just to show where it would be if it hadn’t been piped. By piping the data into the plotting code it means that if you type x = then tab you get a list of the potential columns you can use in the code.\n\npenguins |&gt; \n  ggplot(#data = penguins, \n    mapping = aes(x = bill_depth_mm,\n                  y = bill_length_mm)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\nWhat happens if you make a scatterplot of species vs. bill_depth_mm?\n\n\nWhen deciding which data is plotted on the y the suggestion is often to put the first on the y. The following could be either way but it does make it easier to read the species names if they are on the y axis.\n\npenguins |&gt; \n  ggplot(#data = penguins,\n    mapping = aes(x = bill_depth_mm,\n                  y = species)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nWhat might be a better choice of geom?\n\nDensity plots with a coloured line, this could be replaced with fill = species to move from the line to a more solid chart.\nlinewidth isn’t mentioned in the R4DS and in some code may be lwd or size (although that is deprecated)\n\npenguins |&gt; \n  ggplot(#data = penguins,\n         mapping = aes(x = bill_depth_mm,\n                       colour = species)) +\n  geom_density(linewidth = 2)\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nOr a boxplot:\n\npenguins |&gt; \n  ggplot(#data = penguins,\n    mapping = aes(x = bill_depth_mm,\n                  fill = species)) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\nWhy does the following give an error and how would you fix it?\n\n\n\nggplot(data = penguins) + \ngeom_point()\n\nGives the following error:\nError in `geom_point()`:\n! Problem while setting up geom.\nℹ Error occurred in the 1st layer.\nCaused by error in `compute_geom_1()`:\n! `geom_point()` requires the following missing\n  aesthetics: x and y\nRun `rlang::last_trace()` to see where the error occurred.\nThe error is pointing out there are no aesthetics added, including x and y axis information.\n\npenguins |&gt; \n  ggplot(mapping = aes(x = bill_depth_mm,\n                       y = body_mass_g)) + \n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\nWhat does the na.rm argument do in geom_point()? What is the default value of the argument? Create a scatterplot where you successfully use this argument set to TRUE.\n\n\nAdd the following caption to the plot you made in the previous exercise: “Data come from the palmerpenguins package.” Hint: Take a look at the documentation for labs().\n\n\nRecreate the following visualization. What aesthetic should bill_depth_mm be mapped to? And should it be mapped at the global level or at the geom level?"
  },
  {
    "objectID": "data-visualize.html#section-1",
    "href": "data-visualize.html#section-1",
    "title": "3  Data visualization",
    "section": "2.4.3",
    "text": "2.4.3\n\n\nMake a bar plot of species of penguins, where you assign species to the y aesthetic. How is this plot different?\n\n\nHow are the following two plots different? Which aesthetic, color or fill, is more useful for changing the color of bars?\n\n\n\nggplot(penguins, aes(x = species)) +\n  geom_bar(color = \"red\")\n\nggplot(penguins, aes(x = species)) +\n  geom_bar(fill = \"red\")\n\n\n\nWhat does the bins argument in geom_histogram() do?\n\n\nMake a histogram of the carat variable in the diamonds dataset that is available when you load the tidyverse package. Experiment with different binwidths. What binwidth reveals the most interesting patterns?"
  }
]